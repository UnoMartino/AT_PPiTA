#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE, 10, 9);

short icon_size = 24;

// 'weather-pouring', 24x24px
const unsigned char epd_bitmap_weather_pouring [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0x00, 0xff, 0x7f, 0x3c, 0xfe, 0x3f, 
	0x7e, 0xfc, 0x0f, 0xff, 0xfc, 0x87, 0xff, 0xfd, 0xf3, 0xff, 0xe1, 0xf9, 0xff, 0xc1, 0xf9, 0xff, 
	0x8f, 0xf9, 0xff, 0x9f, 0xf9, 0xcc, 0x9c, 0xf3, 0xcc, 0x8c, 0x67, 0x66, 0xce, 0x7f, 0x66, 0xfe, 
	0x7f, 0x66, 0xfe, 0x7f, 0x66, 0xfe, 0x7f, 0x73, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xf3, 0xff, 0xff, 
	0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// 'weather-sunny', 24x24px
const unsigned char epd_bitmap_weather_sunny [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xc3, 0xf1, 0xcf, 0x81, 0xf3, 0xdf, 0x3c, 0xff, 0x7f, 0x7e, 
	0xfe, 0x7f, 0x7e, 0xfe, 0x7f, 0x7e, 0xfe, 0x7f, 0x7e, 0xfe, 0xff, 0x3c, 0xff, 0xcf, 0x81, 0xf3, 
	0x8f, 0xc3, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// 'weather-cloudy', 24x24px
const unsigned char epd_bitmap_weather_cloudy [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xc1, 0xff, 0xff, 0x00, 0xff, 0x7f, 0x3c, 0xfe, 0x3f, 0x7e, 0xfc, 0x0f, 0xff, 0xfc, 0x87, 0xff, 
	0xfd, 0xf3, 0xff, 0xe1, 0xf9, 0xff, 0xc1, 0xf9, 0xff, 0x8f, 0xf9, 0xff, 0x9f, 0xf9, 0xff, 0x9f, 
	0xf3, 0xff, 0x8f, 0x07, 0x00, 0xc0, 0x0f, 0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// 'water-percent', 24x24px
const unsigned char epd_bitmap_water_percent [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 
	0xc3, 0xff, 0xff, 0x81, 0xff, 0xff, 0x81, 0xff, 0xff, 0x00, 0xff, 0x7f, 0x00, 0xff, 0x7f, 0x46, 
	0xfe, 0x7f, 0x66, 0xfe, 0x3f, 0x30, 0xfc, 0x3f, 0x18, 0xfc, 0x3f, 0x0c, 0xfc, 0x3f, 0x66, 0xfc, 
	0x7f, 0x62, 0xfe, 0x7f, 0x00, 0xfe, 0xff, 0x00, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// 'wifi-strength-4', 12x12px
const unsigned char epd_bitmap_wifi_strength_4 [] PROGMEM = {
	0xff, 0x0f, 0xff, 0x0f, 0x03, 0x0c, 0x01, 0x08, 0x01, 0x08, 0x03, 0x0c, 0x07, 0x0e, 0x07, 0x0e, 
	0x0f, 0x0f, 0x9f, 0x0f, 0xff, 0x0f, 0xff, 0x0f
};
// 'wifi-strength-3', 12x12px
const unsigned char epd_bitmap_wifi_strength_3 [] PROGMEM = {
	0xff, 0x0f, 0xff, 0x0f, 0x03, 0x0c, 0xfd, 0x0b, 0x05, 0x0a, 0x03, 0x0c, 0x07, 0x0e, 0x07, 0x0e, 
	0x0f, 0x0f, 0x9f, 0x0f, 0xff, 0x0f, 0xff, 0x0f
};

void setup(void) {
  u8g2.begin();
}

void loop(void) {
  u8g2.clearBuffer();					// clear the internal memory
  u8g2.setFontMode(0);
  u8g2.setDrawColor(1);

  // u8g2.setFont(u8g2_font_ncenB08_tr);	// choose a suitable font u8g2_font_pixelmordred_tf
  u8g2.setFont(u8g2_font_helvR12_tf);
  // u8g2.drawStr(0,10,"Hello World!");	// write something to the internal memory
  u8g2.drawBox(0, 20, 128, 44);

  u8g2.drawStr(8, 16,"9:41");

  u8g2.drawXBMP(4, 20, icon_size, icon_size, epd_bitmap_weather_sunny);

  u8g2.setFont(u8g2_font_helvR10_tf);
  u8g2.setFontMode(0);
  u8g2.setDrawColor(0);
  u8g2.drawStr(28, 38,"19 C");

  u8g2.setFont(u8g2_font_helvR10_tf);
  u8g2.setFontMode(0);
  u8g2.setDrawColor(0);
  u8g2.drawStr(8, 58,"Tarnow");

  u8g2.setFontMode(0);
  u8g2.setDrawColor(1);
  u8g2.drawXBMP(64, 20, icon_size, icon_size, epd_bitmap_water_percent);

  u8g2.setFont(u8g2_font_helvR10_tf);
  u8g2.setFontMode(0);
  u8g2.setDrawColor(0);
  u8g2.drawStr(90, 38,"54 %");

  u8g2.sendBuffer();					// transfer internal memory to the display
  delay(1000);  
}

